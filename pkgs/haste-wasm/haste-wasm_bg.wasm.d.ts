/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_wrappedparser_free(a: number, b: number): void;
export function __wbg_entityli_free(a: number, b: number): void;
export function __wbg_get_entityli_index(a: number): number;
export function __wbg_set_entityli_index(a: number, b: number): void;
export function __wbg_get_entityli_name(a: number, b: number): void;
export function __wbg_entityfieldli_free(a: number, b: number): void;
export function __wbg_get_entityfieldli_path(a: number, b: number): void;
export function __wbg_set_entityfieldli_path(a: number, b: number, c: number): void;
export function __wbg_get_entityfieldli_namedPath(a: number, b: number): void;
export function __wbg_set_entityfieldli_namedPath(a: number, b: number, c: number): void;
export function __wbg_get_entityfieldli_value(a: number, b: number): void;
export function __wbg_set_entityfieldli_value(a: number, b: number, c: number): void;
export function __wbg_get_entityfieldli_encodedAs(a: number, b: number): void;
export function __wbg_set_entityfieldli_encodedAs(a: number, b: number, c: number): void;
export function __wbg_get_entityfieldli_decodedAs(a: number, b: number): void;
export function __wbg_set_entityfieldli_decodedAs(a: number, b: number, c: number): void;
export function __wbg_stringtableli_free(a: number, b: number): void;
export function __wbg_stringtableitemli_free(a: number, b: number): void;
export function __wbg_get_stringtableitemli_string(a: number, b: number): void;
export function __wbg_set_stringtableitemli_string(a: number, b: number, c: number): void;
export function __wbg_get_stringtableitemli_userData(a: number, b: number): void;
export function __wbg_set_stringtableitemli_userData(a: number, b: number, c: number): void;
export function wrappedparser_fromBytes(a: number, b: number, c: number): void;
export function wrappedparser_tick(a: number): number;
export function wrappedparser_totalTicks(a: number, b: number): void;
export function wrappedparser_runToTick(a: number, b: number, c: number): void;
export function wrappedparser_listEntities(a: number, b: number): void;
export function wrappedparser_listBaselineEntities(a: number, b: number): void;
export function wrappedparser_listEntityFields(a: number, b: number, c: number): void;
export function wrappedparser_listBaselineEntityFields(a: number, b: number, c: number): void;
export function wrappedparser_listStringTables(a: number, b: number): void;
export function wrappedparser_listStringTableItems(a: number, b: number, c: number, d: number): void;
export function isEHandleValid(a: number): number;
export function eHandleToIndex(a: number): number;
export function __wbg_set_entityli_name(a: number, b: number, c: number): void;
export function __wbg_set_stringtableli_name(a: number, b: number, c: number): void;
export function __wbg_get_stringtableli_name(a: number, b: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
